/*
 * generated by Xtext 2.26.0
 */
package org.xtext.example.mydsl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class CBSGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class SystemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.CBS.System");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSystemKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cChildContextsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cChildContextsAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cChildContextsAssemblyContextParserRuleCall_3_2_0 = (RuleCall)cChildContextsAssignment_3_2.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCommaKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cChildContextsAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final RuleCall cChildContextsAssemblyContextParserRuleCall_3_3_1_0 = (RuleCall)cChildContextsAssignment_3_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cAssemblyConnectorsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cAssemblyConnectorsAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cAssemblyConnectorsAssemblyConnectorParserRuleCall_4_2_0 = (RuleCall)cAssemblyConnectorsAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cAssemblyConnectorsAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cAssemblyConnectorsAssemblyConnectorParserRuleCall_4_3_1_0 = (RuleCall)cAssemblyConnectorsAssignment_4_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cRequiredDelegationConnectorsKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cRequiredDelegationConnectorsAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cRequiredDelegationConnectorsRequiredDelegationConnectorParserRuleCall_5_2_0 = (RuleCall)cRequiredDelegationConnectorsAssignment_5_2.eContents().get(0);
		private final Group cGroup_5_3 = (Group)cGroup_5.eContents().get(3);
		private final Keyword cCommaKeyword_5_3_0 = (Keyword)cGroup_5_3.eContents().get(0);
		private final Assignment cRequiredDelegationConnectorsAssignment_5_3_1 = (Assignment)cGroup_5_3.eContents().get(1);
		private final RuleCall cRequiredDelegationConnectorsRequiredDelegationConnectorParserRuleCall_5_3_1_0 = (RuleCall)cRequiredDelegationConnectorsAssignment_5_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cProvidedDelegationConnectorsKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cProvidedDelegationConnectorsAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cProvidedDelegationConnectorsProvidedDelegationConnectorParserRuleCall_6_2_0 = (RuleCall)cProvidedDelegationConnectorsAssignment_6_2.eContents().get(0);
		private final Group cGroup_6_3 = (Group)cGroup_6.eContents().get(3);
		private final Keyword cCommaKeyword_6_3_0 = (Keyword)cGroup_6_3.eContents().get(0);
		private final Assignment cProvidedDelegationConnectorsAssignment_6_3_1 = (Assignment)cGroup_6_3.eContents().get(1);
		private final RuleCall cProvidedDelegationConnectorsProvidedDelegationConnectorParserRuleCall_6_3_1_0 = (RuleCall)cProvidedDelegationConnectorsAssignment_6_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6_4 = (Keyword)cGroup_6.eContents().get(4);
		private final Keyword cAllocationKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cLeftCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cAllocationAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cAllocationAllocationParserRuleCall_9_0 = (RuleCall)cAllocationAssignment_9.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//// region allocation
		//System returns allocation::System:
		//    'System'
		//    name=EString
		//    '{'
		//        ('childContexts=' '{' childContexts+=AssemblyContext ( "," childContexts+=AssemblyContext)* '}' )?
		//        ('assemblyConnectors=' '{' assemblyConnectors+=AssemblyConnector ( "," assemblyConnectors+=AssemblyConnector)* '}' )?
		//        ('requiredDelegationConnectors=' '{' requiredDelegationConnectors+=RequiredDelegationConnector ( "," requiredDelegationConnectors+=RequiredDelegationConnector)* '}' )?
		//        ('providedDelegationConnectors=' '{' providedDelegationConnectors+=ProvidedDelegationConnector ( "," providedDelegationConnectors+=ProvidedDelegationConnector)* '}' )?
		//        'allocation='     '{' allocation=Allocation     '}'
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'System'
		//name=EString
		//'{'
		//    ('childContexts=' '{' childContexts+=AssemblyContext ( "," childContexts+=AssemblyContext)* '}' )?
		//    ('assemblyConnectors=' '{' assemblyConnectors+=AssemblyConnector ( "," assemblyConnectors+=AssemblyConnector)* '}' )?
		//    ('requiredDelegationConnectors=' '{' requiredDelegationConnectors+=RequiredDelegationConnector ( "," requiredDelegationConnectors+=RequiredDelegationConnector)* '}' )?
		//    ('providedDelegationConnectors=' '{' providedDelegationConnectors+=ProvidedDelegationConnector ( "," providedDelegationConnectors+=ProvidedDelegationConnector)* '}' )?
		//    'allocation='     '{' allocation=Allocation     '}'
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'System'
		public Keyword getSystemKeyword_0() { return cSystemKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('childContexts=' '{' childContexts+=AssemblyContext ( "," childContexts+=AssemblyContext)* '}' )?
		public Group getGroup_3() { return cGroup_3; }
		
		//'childContexts='
		public Keyword getChildContextsKeyword_3_0() { return cChildContextsKeyword_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3_1() { return cLeftCurlyBracketKeyword_3_1; }
		
		//childContexts+=AssemblyContext
		public Assignment getChildContextsAssignment_3_2() { return cChildContextsAssignment_3_2; }
		
		//AssemblyContext
		public RuleCall getChildContextsAssemblyContextParserRuleCall_3_2_0() { return cChildContextsAssemblyContextParserRuleCall_3_2_0; }
		
		//( "," childContexts+=AssemblyContext)*
		public Group getGroup_3_3() { return cGroup_3_3; }
		
		//","
		public Keyword getCommaKeyword_3_3_0() { return cCommaKeyword_3_3_0; }
		
		//childContexts+=AssemblyContext
		public Assignment getChildContextsAssignment_3_3_1() { return cChildContextsAssignment_3_3_1; }
		
		//AssemblyContext
		public RuleCall getChildContextsAssemblyContextParserRuleCall_3_3_1_0() { return cChildContextsAssemblyContextParserRuleCall_3_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3_4() { return cRightCurlyBracketKeyword_3_4; }
		
		//('assemblyConnectors=' '{' assemblyConnectors+=AssemblyConnector ( "," assemblyConnectors+=AssemblyConnector)* '}' )?
		public Group getGroup_4() { return cGroup_4; }
		
		//'assemblyConnectors='
		public Keyword getAssemblyConnectorsKeyword_4_0() { return cAssemblyConnectorsKeyword_4_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }
		
		//assemblyConnectors+=AssemblyConnector
		public Assignment getAssemblyConnectorsAssignment_4_2() { return cAssemblyConnectorsAssignment_4_2; }
		
		//AssemblyConnector
		public RuleCall getAssemblyConnectorsAssemblyConnectorParserRuleCall_4_2_0() { return cAssemblyConnectorsAssemblyConnectorParserRuleCall_4_2_0; }
		
		//( "," assemblyConnectors+=AssemblyConnector)*
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }
		
		//assemblyConnectors+=AssemblyConnector
		public Assignment getAssemblyConnectorsAssignment_4_3_1() { return cAssemblyConnectorsAssignment_4_3_1; }
		
		//AssemblyConnector
		public RuleCall getAssemblyConnectorsAssemblyConnectorParserRuleCall_4_3_1_0() { return cAssemblyConnectorsAssemblyConnectorParserRuleCall_4_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4_4() { return cRightCurlyBracketKeyword_4_4; }
		
		//('requiredDelegationConnectors=' '{' requiredDelegationConnectors+=RequiredDelegationConnector ( "," requiredDelegationConnectors+=RequiredDelegationConnector)* '}' )?
		public Group getGroup_5() { return cGroup_5; }
		
		//'requiredDelegationConnectors='
		public Keyword getRequiredDelegationConnectorsKeyword_5_0() { return cRequiredDelegationConnectorsKeyword_5_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5_1() { return cLeftCurlyBracketKeyword_5_1; }
		
		//requiredDelegationConnectors+=RequiredDelegationConnector
		public Assignment getRequiredDelegationConnectorsAssignment_5_2() { return cRequiredDelegationConnectorsAssignment_5_2; }
		
		//RequiredDelegationConnector
		public RuleCall getRequiredDelegationConnectorsRequiredDelegationConnectorParserRuleCall_5_2_0() { return cRequiredDelegationConnectorsRequiredDelegationConnectorParserRuleCall_5_2_0; }
		
		//( "," requiredDelegationConnectors+=RequiredDelegationConnector)*
		public Group getGroup_5_3() { return cGroup_5_3; }
		
		//","
		public Keyword getCommaKeyword_5_3_0() { return cCommaKeyword_5_3_0; }
		
		//requiredDelegationConnectors+=RequiredDelegationConnector
		public Assignment getRequiredDelegationConnectorsAssignment_5_3_1() { return cRequiredDelegationConnectorsAssignment_5_3_1; }
		
		//RequiredDelegationConnector
		public RuleCall getRequiredDelegationConnectorsRequiredDelegationConnectorParserRuleCall_5_3_1_0() { return cRequiredDelegationConnectorsRequiredDelegationConnectorParserRuleCall_5_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5_4() { return cRightCurlyBracketKeyword_5_4; }
		
		//('providedDelegationConnectors=' '{' providedDelegationConnectors+=ProvidedDelegationConnector ( "," providedDelegationConnectors+=ProvidedDelegationConnector)* '}' )?
		public Group getGroup_6() { return cGroup_6; }
		
		//'providedDelegationConnectors='
		public Keyword getProvidedDelegationConnectorsKeyword_6_0() { return cProvidedDelegationConnectorsKeyword_6_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6_1() { return cLeftCurlyBracketKeyword_6_1; }
		
		//providedDelegationConnectors+=ProvidedDelegationConnector
		public Assignment getProvidedDelegationConnectorsAssignment_6_2() { return cProvidedDelegationConnectorsAssignment_6_2; }
		
		//ProvidedDelegationConnector
		public RuleCall getProvidedDelegationConnectorsProvidedDelegationConnectorParserRuleCall_6_2_0() { return cProvidedDelegationConnectorsProvidedDelegationConnectorParserRuleCall_6_2_0; }
		
		//( "," providedDelegationConnectors+=ProvidedDelegationConnector)*
		public Group getGroup_6_3() { return cGroup_6_3; }
		
		//","
		public Keyword getCommaKeyword_6_3_0() { return cCommaKeyword_6_3_0; }
		
		//providedDelegationConnectors+=ProvidedDelegationConnector
		public Assignment getProvidedDelegationConnectorsAssignment_6_3_1() { return cProvidedDelegationConnectorsAssignment_6_3_1; }
		
		//ProvidedDelegationConnector
		public RuleCall getProvidedDelegationConnectorsProvidedDelegationConnectorParserRuleCall_6_3_1_0() { return cProvidedDelegationConnectorsProvidedDelegationConnectorParserRuleCall_6_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6_4() { return cRightCurlyBracketKeyword_6_4; }
		
		//'allocation='
		public Keyword getAllocationKeyword_7() { return cAllocationKeyword_7; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_8() { return cLeftCurlyBracketKeyword_8; }
		
		//allocation=Allocation
		public Assignment getAllocationAssignment_9() { return cAllocationAssignment_9; }
		
		//Allocation
		public RuleCall getAllocationAllocationParserRuleCall_9_0() { return cAllocationAllocationParserRuleCall_9_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
	}
	public class AllocationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.CBS.Allocation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEnvKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cEnvironmentAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cEnvironmentEnvironmentCrossReference_1_0 = (CrossReference)cEnvironmentAssignment_1.eContents().get(0);
		private final RuleCall cEnvironmentEnvironmentEStringParserRuleCall_1_0_1 = (RuleCall)cEnvironmentEnvironmentCrossReference_1_0.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cAllocationContextsKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cAllocationContextsAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cAllocationContextsAllocationContextParserRuleCall_2_2_0 = (RuleCall)cAllocationContextsAssignment_2_2.eContents().get(0);
		private final Group cGroup_2_3 = (Group)cGroup_2.eContents().get(3);
		private final Keyword cCommaKeyword_2_3_0 = (Keyword)cGroup_2_3.eContents().get(0);
		private final Assignment cAllocationContextsAssignment_2_3_1 = (Assignment)cGroup_2_3.eContents().get(1);
		private final RuleCall cAllocationContextsAllocationContextParserRuleCall_2_3_1_0 = (RuleCall)cAllocationContextsAssignment_2_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_4 = (Keyword)cGroup_2.eContents().get(4);
		
		//Allocation returns allocation::Allocation:
		//    'env=' environment=[environment::Environment|EString]
		//    ('allocationContexts=' '{' allocationContexts+=AllocationContext ( "," allocationContexts+=AllocationContext)* '}' )?;
		@Override public ParserRule getRule() { return rule; }
		
		//'env=' environment=[environment::Environment|EString]
		//('allocationContexts=' '{' allocationContexts+=AllocationContext ( "," allocationContexts+=AllocationContext)* '}' )?
		public Group getGroup() { return cGroup; }
		
		//'env='
		public Keyword getEnvKeyword_0() { return cEnvKeyword_0; }
		
		//environment=[environment::Environment|EString]
		public Assignment getEnvironmentAssignment_1() { return cEnvironmentAssignment_1; }
		
		//[environment::Environment|EString]
		public CrossReference getEnvironmentEnvironmentCrossReference_1_0() { return cEnvironmentEnvironmentCrossReference_1_0; }
		
		//EString
		public RuleCall getEnvironmentEnvironmentEStringParserRuleCall_1_0_1() { return cEnvironmentEnvironmentEStringParserRuleCall_1_0_1; }
		
		//('allocationContexts=' '{' allocationContexts+=AllocationContext ( "," allocationContexts+=AllocationContext)* '}' )?
		public Group getGroup_2() { return cGroup_2; }
		
		//'allocationContexts='
		public Keyword getAllocationContextsKeyword_2_0() { return cAllocationContextsKeyword_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2_1() { return cLeftCurlyBracketKeyword_2_1; }
		
		//allocationContexts+=AllocationContext
		public Assignment getAllocationContextsAssignment_2_2() { return cAllocationContextsAssignment_2_2; }
		
		//AllocationContext
		public RuleCall getAllocationContextsAllocationContextParserRuleCall_2_2_0() { return cAllocationContextsAllocationContextParserRuleCall_2_2_0; }
		
		//( "," allocationContexts+=AllocationContext)*
		public Group getGroup_2_3() { return cGroup_2_3; }
		
		//","
		public Keyword getCommaKeyword_2_3_0() { return cCommaKeyword_2_3_0; }
		
		//allocationContexts+=AllocationContext
		public Assignment getAllocationContextsAssignment_2_3_1() { return cAllocationContextsAssignment_2_3_1; }
		
		//AllocationContext
		public RuleCall getAllocationContextsAllocationContextParserRuleCall_2_3_1_0() { return cAllocationContextsAllocationContextParserRuleCall_2_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_2_4() { return cRightCurlyBracketKeyword_2_4; }
	}
	public class AllocationContextElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.CBS.AllocationContext");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cContainerKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cContainerAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cContainerContainerCrossReference_2_0 = (CrossReference)cContainerAssignment_2.eContents().get(0);
		private final RuleCall cContainerContainerEStringParserRuleCall_2_0_1 = (RuleCall)cContainerContainerCrossReference_2_0.eContents().get(1);
		private final Keyword cAllocatesKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cAllocatesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cAllocatesAssemblyContextCrossReference_4_0 = (CrossReference)cAllocatesAssignment_4.eContents().get(0);
		private final RuleCall cAllocatesAssemblyContextEStringParserRuleCall_4_0_1 = (RuleCall)cAllocatesAssemblyContextCrossReference_4_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//AllocationContext returns allocation::AllocationContext:
		//    '{'
		//        'container' container=[environment::Container|EString]
		//        'allocates' allocates=[assembly::AssemblyContext|EString]
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'{'
		//    'container' container=[environment::Container|EString]
		//    'allocates' allocates=[assembly::AssemblyContext|EString]
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }
		
		//'container'
		public Keyword getContainerKeyword_1() { return cContainerKeyword_1; }
		
		//container=[environment::Container|EString]
		public Assignment getContainerAssignment_2() { return cContainerAssignment_2; }
		
		//[environment::Container|EString]
		public CrossReference getContainerContainerCrossReference_2_0() { return cContainerContainerCrossReference_2_0; }
		
		//EString
		public RuleCall getContainerContainerEStringParserRuleCall_2_0_1() { return cContainerContainerEStringParserRuleCall_2_0_1; }
		
		//'allocates'
		public Keyword getAllocatesKeyword_3() { return cAllocatesKeyword_3; }
		
		//allocates=[assembly::AssemblyContext|EString]
		public Assignment getAllocatesAssignment_4() { return cAllocatesAssignment_4; }
		
		//[assembly::AssemblyContext|EString]
		public CrossReference getAllocatesAssemblyContextCrossReference_4_0() { return cAllocatesAssemblyContextCrossReference_4_0; }
		
		//EString
		public RuleCall getAllocatesAssemblyContextEStringParserRuleCall_4_0_1() { return cAllocatesAssemblyContextEStringParserRuleCall_4_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class EnvironmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.CBS.Environment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEnvironmentAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cEnvironmentKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cContainersKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cContainerAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cContainerContainerParserRuleCall_4_2_0 = (RuleCall)cContainerAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cContainerAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cContainerContainerParserRuleCall_4_3_1_0 = (RuleCall)cContainerAssignment_4_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cLinkersKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cLinkerAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cLinkerLinkerParserRuleCall_5_2_0 = (RuleCall)cLinkerAssignment_5_2.eContents().get(0);
		private final Group cGroup_5_3 = (Group)cGroup_5.eContents().get(3);
		private final Keyword cCommaKeyword_5_3_0 = (Keyword)cGroup_5_3.eContents().get(0);
		private final Assignment cLinkerAssignment_5_3_1 = (Assignment)cGroup_5_3.eContents().get(1);
		private final RuleCall cLinkerLinkerParserRuleCall_5_3_1_0 = (RuleCall)cLinkerAssignment_5_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//// region environment
		//Environment returns environment::Environment:
		//    {environment::Environment}
		//    'Environment'
		//    name=EString
		//    '{'
		//        ('containers=' '{' container+=Container ( "," container+=Container)* '}' )?
		//        ('linkers=' '{' linker+=Linker ( "," linker+=Linker)* '}' )?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{environment::Environment}
		//'Environment'
		//name=EString
		//'{'
		//    ('containers=' '{' container+=Container ( "," container+=Container)* '}' )?
		//    ('linkers=' '{' linker+=Linker ( "," linker+=Linker)* '}' )?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{environment::Environment}
		public Action getEnvironmentAction_0() { return cEnvironmentAction_0; }
		
		//'Environment'
		public Keyword getEnvironmentKeyword_1() { return cEnvironmentKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('containers=' '{' container+=Container ( "," container+=Container)* '}' )?
		public Group getGroup_4() { return cGroup_4; }
		
		//'containers='
		public Keyword getContainersKeyword_4_0() { return cContainersKeyword_4_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }
		
		//container+=Container
		public Assignment getContainerAssignment_4_2() { return cContainerAssignment_4_2; }
		
		//Container
		public RuleCall getContainerContainerParserRuleCall_4_2_0() { return cContainerContainerParserRuleCall_4_2_0; }
		
		//( "," container+=Container)*
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }
		
		//container+=Container
		public Assignment getContainerAssignment_4_3_1() { return cContainerAssignment_4_3_1; }
		
		//Container
		public RuleCall getContainerContainerParserRuleCall_4_3_1_0() { return cContainerContainerParserRuleCall_4_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4_4() { return cRightCurlyBracketKeyword_4_4; }
		
		//('linkers=' '{' linker+=Linker ( "," linker+=Linker)* '}' )?
		public Group getGroup_5() { return cGroup_5; }
		
		//'linkers='
		public Keyword getLinkersKeyword_5_0() { return cLinkersKeyword_5_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5_1() { return cLeftCurlyBracketKeyword_5_1; }
		
		//linker+=Linker
		public Assignment getLinkerAssignment_5_2() { return cLinkerAssignment_5_2; }
		
		//Linker
		public RuleCall getLinkerLinkerParserRuleCall_5_2_0() { return cLinkerLinkerParserRuleCall_5_2_0; }
		
		//( "," linker+=Linker)*
		public Group getGroup_5_3() { return cGroup_5_3; }
		
		//","
		public Keyword getCommaKeyword_5_3_0() { return cCommaKeyword_5_3_0; }
		
		//linker+=Linker
		public Assignment getLinkerAssignment_5_3_1() { return cLinkerAssignment_5_3_1; }
		
		//Linker
		public RuleCall getLinkerLinkerParserRuleCall_5_3_1_0() { return cLinkerLinkerParserRuleCall_5_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5_4() { return cRightCurlyBracketKeyword_5_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class ContainerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.CBS.Container");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cContainerAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//Container returns environment::Container:
		//    {environment::Container}
		//    name=EString;
		@Override public ParserRule getRule() { return rule; }
		
		//{environment::Container}
		//name=EString
		public Group getGroup() { return cGroup; }
		
		//{environment::Container}
		public Action getContainerAction_0() { return cContainerAction_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
	}
	public class LinkerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.CBS.Linker");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLinkKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cLinksAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cLinksContainerCrossReference_2_0 = (CrossReference)cLinksAssignment_2.eContents().get(0);
		private final RuleCall cLinksContainerEStringParserRuleCall_2_0_1 = (RuleCall)cLinksContainerCrossReference_2_0.eContents().get(1);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cLinksAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cLinksContainerCrossReference_3_1_0 = (CrossReference)cLinksAssignment_3_1.eContents().get(0);
		private final RuleCall cLinksContainerEStringParserRuleCall_3_1_0_1 = (RuleCall)cLinksContainerCrossReference_3_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Linker returns environment::Linker:
		//    'link' '(' links+=[environment::Container|EString] ( "," links+=[environment::Container|EString])* ')' ;
		@Override public ParserRule getRule() { return rule; }
		
		//'link' '(' links+=[environment::Container|EString] ( "," links+=[environment::Container|EString])* ')'
		public Group getGroup() { return cGroup; }
		
		//'link'
		public Keyword getLinkKeyword_0() { return cLinkKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//links+=[environment::Container|EString]
		public Assignment getLinksAssignment_2() { return cLinksAssignment_2; }
		
		//[environment::Container|EString]
		public CrossReference getLinksContainerCrossReference_2_0() { return cLinksContainerCrossReference_2_0; }
		
		//EString
		public RuleCall getLinksContainerEStringParserRuleCall_2_0_1() { return cLinksContainerEStringParserRuleCall_2_0_1; }
		
		//( "," links+=[environment::Container|EString])*
		public Group getGroup_3() { return cGroup_3; }
		
		//","
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }
		
		//links+=[environment::Container|EString]
		public Assignment getLinksAssignment_3_1() { return cLinksAssignment_3_1; }
		
		//[environment::Container|EString]
		public CrossReference getLinksContainerCrossReference_3_1_0() { return cLinksContainerCrossReference_3_1_0; }
		
		//EString
		public RuleCall getLinksContainerEStringParserRuleCall_3_1_0_1() { return cLinksContainerEStringParserRuleCall_3_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }
	}
	public class AssemblyContextElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.CBS.AssemblyContext");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameEStringParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cInstanceKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cInstantiatesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cInstantiatesComponentCrossReference_3_0 = (CrossReference)cInstantiatesAssignment_3.eContents().get(0);
		private final RuleCall cInstantiatesComponentEStringParserRuleCall_3_0_1 = (RuleCall)cInstantiatesComponentCrossReference_3_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cProvideKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cProvidedRolesAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cProvidedRolesProvidedRoleParserRuleCall_4_2_0 = (RuleCall)cProvidedRolesAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cProvidedRolesAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cProvidedRolesProvidedRoleParserRuleCall_4_3_1_0 = (RuleCall)cProvidedRolesAssignment_4_3_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cRequireKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cRequiredRolesAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cRequiredRolesRequiredRoleParserRuleCall_5_2_0 = (RuleCall)cRequiredRolesAssignment_5_2.eContents().get(0);
		private final Group cGroup_5_3 = (Group)cGroup_5.eContents().get(3);
		private final Keyword cCommaKeyword_5_3_0 = (Keyword)cGroup_5_3.eContents().get(0);
		private final Assignment cRequiredRolesAssignment_5_3_1 = (Assignment)cGroup_5_3.eContents().get(1);
		private final RuleCall cRequiredRolesRequiredRoleParserRuleCall_5_3_1_0 = (RuleCall)cRequiredRolesAssignment_5_3_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//// region assembly
		//AssemblyContext returns assembly::AssemblyContext:
		//    name=EString
		//    '{'
		//        'instance' instantiates=[repository::Component|EString]
		//        ('provide' '(' providedRoles+=ProvidedRole ( "," providedRoles+=ProvidedRole)* ')' )?
		//        ('require' '(' requiredRoles+=RequiredRole ( "," requiredRoles+=RequiredRole)* ')' )?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//name=EString
		//'{'
		//    'instance' instantiates=[repository::Component|EString]
		//    ('provide' '(' providedRoles+=ProvidedRole ( "," providedRoles+=ProvidedRole)* ')' )?
		//    ('require' '(' requiredRoles+=RequiredRole ( "," requiredRoles+=RequiredRole)* ')' )?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//name=EString
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_0_0() { return cNameEStringParserRuleCall_0_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'instance'
		public Keyword getInstanceKeyword_2() { return cInstanceKeyword_2; }
		
		//instantiates=[repository::Component|EString]
		public Assignment getInstantiatesAssignment_3() { return cInstantiatesAssignment_3; }
		
		//[repository::Component|EString]
		public CrossReference getInstantiatesComponentCrossReference_3_0() { return cInstantiatesComponentCrossReference_3_0; }
		
		//EString
		public RuleCall getInstantiatesComponentEStringParserRuleCall_3_0_1() { return cInstantiatesComponentEStringParserRuleCall_3_0_1; }
		
		//('provide' '(' providedRoles+=ProvidedRole ( "," providedRoles+=ProvidedRole)* ')' )?
		public Group getGroup_4() { return cGroup_4; }
		
		//'provide'
		public Keyword getProvideKeyword_4_0() { return cProvideKeyword_4_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_4_1() { return cLeftParenthesisKeyword_4_1; }
		
		//providedRoles+=ProvidedRole
		public Assignment getProvidedRolesAssignment_4_2() { return cProvidedRolesAssignment_4_2; }
		
		//ProvidedRole
		public RuleCall getProvidedRolesProvidedRoleParserRuleCall_4_2_0() { return cProvidedRolesProvidedRoleParserRuleCall_4_2_0; }
		
		//( "," providedRoles+=ProvidedRole)*
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }
		
		//providedRoles+=ProvidedRole
		public Assignment getProvidedRolesAssignment_4_3_1() { return cProvidedRolesAssignment_4_3_1; }
		
		//ProvidedRole
		public RuleCall getProvidedRolesProvidedRoleParserRuleCall_4_3_1_0() { return cProvidedRolesProvidedRoleParserRuleCall_4_3_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_4_4() { return cRightParenthesisKeyword_4_4; }
		
		//('require' '(' requiredRoles+=RequiredRole ( "," requiredRoles+=RequiredRole)* ')' )?
		public Group getGroup_5() { return cGroup_5; }
		
		//'require'
		public Keyword getRequireKeyword_5_0() { return cRequireKeyword_5_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_5_1() { return cLeftParenthesisKeyword_5_1; }
		
		//requiredRoles+=RequiredRole
		public Assignment getRequiredRolesAssignment_5_2() { return cRequiredRolesAssignment_5_2; }
		
		//RequiredRole
		public RuleCall getRequiredRolesRequiredRoleParserRuleCall_5_2_0() { return cRequiredRolesRequiredRoleParserRuleCall_5_2_0; }
		
		//( "," requiredRoles+=RequiredRole)*
		public Group getGroup_5_3() { return cGroup_5_3; }
		
		//","
		public Keyword getCommaKeyword_5_3_0() { return cCommaKeyword_5_3_0; }
		
		//requiredRoles+=RequiredRole
		public Assignment getRequiredRolesAssignment_5_3_1() { return cRequiredRolesAssignment_5_3_1; }
		
		//RequiredRole
		public RuleCall getRequiredRolesRequiredRoleParserRuleCall_5_3_1_0() { return cRequiredRolesRequiredRoleParserRuleCall_5_3_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_5_4() { return cRightParenthesisKeyword_5_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class AssemblyConnectorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.CBS.AssemblyConnector");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cRequiringRoleAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cRequiringRoleRequiredRoleCrossReference_1_0 = (CrossReference)cRequiringRoleAssignment_1.eContents().get(0);
		private final RuleCall cRequiringRoleRequiredRoleEStringParserRuleCall_1_0_1 = (RuleCall)cRequiringRoleRequiredRoleCrossReference_1_0.eContents().get(1);
		private final Keyword cCommaKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cProvidingRoleAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cProvidingRoleProvidedRoleCrossReference_3_0 = (CrossReference)cProvidingRoleAssignment_3.eContents().get(0);
		private final RuleCall cProvidingRoleProvidedRoleEStringParserRuleCall_3_0_1 = (RuleCall)cProvidingRoleProvidedRoleCrossReference_3_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//AssemblyConnector returns assembly::AssemblyConnector:
		//    '('
		//        requiringRole=[assembly::RequiredRole|EString]
		//    ','
		//        providingRole=[assembly::ProvidedRole|EString]
		//    ')';
		@Override public ParserRule getRule() { return rule; }
		
		//'('
		//    requiringRole=[assembly::RequiredRole|EString]
		//','
		//    providingRole=[assembly::ProvidedRole|EString]
		//')'
		public Group getGroup() { return cGroup; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_0() { return cLeftParenthesisKeyword_0; }
		
		//requiringRole=[assembly::RequiredRole|EString]
		public Assignment getRequiringRoleAssignment_1() { return cRequiringRoleAssignment_1; }
		
		//[assembly::RequiredRole|EString]
		public CrossReference getRequiringRoleRequiredRoleCrossReference_1_0() { return cRequiringRoleRequiredRoleCrossReference_1_0; }
		
		//EString
		public RuleCall getRequiringRoleRequiredRoleEStringParserRuleCall_1_0_1() { return cRequiringRoleRequiredRoleEStringParserRuleCall_1_0_1; }
		
		//','
		public Keyword getCommaKeyword_2() { return cCommaKeyword_2; }
		
		//providingRole=[assembly::ProvidedRole|EString]
		public Assignment getProvidingRoleAssignment_3() { return cProvidingRoleAssignment_3; }
		
		//[assembly::ProvidedRole|EString]
		public CrossReference getProvidingRoleProvidedRoleCrossReference_3_0() { return cProvidingRoleProvidedRoleCrossReference_3_0; }
		
		//EString
		public RuleCall getProvidingRoleProvidedRoleEStringParserRuleCall_3_0_1() { return cProvidingRoleProvidedRoleEStringParserRuleCall_3_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }
	}
	public class RequiredDelegationConnectorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.CBS.RequiredDelegationConnector");
		private final Assignment cRequiringRoleAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cRequiringRoleRequiredRoleCrossReference_0 = (CrossReference)cRequiringRoleAssignment.eContents().get(0);
		private final RuleCall cRequiringRoleRequiredRoleEStringParserRuleCall_0_1 = (RuleCall)cRequiringRoleRequiredRoleCrossReference_0.eContents().get(1);
		
		//RequiredDelegationConnector returns assembly::RequiredDelegationConnector:
		//    requiringRole=[assembly::RequiredRole|EString];
		@Override public ParserRule getRule() { return rule; }
		
		//requiringRole=[assembly::RequiredRole|EString]
		public Assignment getRequiringRoleAssignment() { return cRequiringRoleAssignment; }
		
		//[assembly::RequiredRole|EString]
		public CrossReference getRequiringRoleRequiredRoleCrossReference_0() { return cRequiringRoleRequiredRoleCrossReference_0; }
		
		//EString
		public RuleCall getRequiringRoleRequiredRoleEStringParserRuleCall_0_1() { return cRequiringRoleRequiredRoleEStringParserRuleCall_0_1; }
	}
	public class ProvidedDelegationConnectorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.CBS.ProvidedDelegationConnector");
		private final Assignment cProvidingRoleAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cProvidingRoleProvidedRoleCrossReference_0 = (CrossReference)cProvidingRoleAssignment.eContents().get(0);
		private final RuleCall cProvidingRoleProvidedRoleEStringParserRuleCall_0_1 = (RuleCall)cProvidingRoleProvidedRoleCrossReference_0.eContents().get(1);
		
		//ProvidedDelegationConnector returns assembly::ProvidedDelegationConnector:
		//     providingRole=[assembly::ProvidedRole|EString];
		@Override public ParserRule getRule() { return rule; }
		
		//providingRole=[assembly::ProvidedRole|EString]
		public Assignment getProvidingRoleAssignment() { return cProvidingRoleAssignment; }
		
		//[assembly::ProvidedRole|EString]
		public CrossReference getProvidingRoleProvidedRoleCrossReference_0() { return cProvidingRoleProvidedRoleCrossReference_0; }
		
		//EString
		public RuleCall getProvidingRoleProvidedRoleEStringParserRuleCall_0_1() { return cProvidingRoleProvidedRoleEStringParserRuleCall_0_1; }
	}
	public class ProvidedRoleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.CBS.ProvidedRole");
		private final Assignment cInterfaceAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cInterfaceInterfaceCrossReference_0 = (CrossReference)cInterfaceAssignment.eContents().get(0);
		private final RuleCall cInterfaceInterfaceEStringParserRuleCall_0_1 = (RuleCall)cInterfaceInterfaceCrossReference_0.eContents().get(1);
		
		//ProvidedRole returns assembly::ProvidedRole:
		//        interface=[repository::Interface|EString];
		@Override public ParserRule getRule() { return rule; }
		
		//interface=[repository::Interface|EString]
		public Assignment getInterfaceAssignment() { return cInterfaceAssignment; }
		
		//[repository::Interface|EString]
		public CrossReference getInterfaceInterfaceCrossReference_0() { return cInterfaceInterfaceCrossReference_0; }
		
		//EString
		public RuleCall getInterfaceInterfaceEStringParserRuleCall_0_1() { return cInterfaceInterfaceEStringParserRuleCall_0_1; }
	}
	public class RequiredRoleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.CBS.RequiredRole");
		private final Assignment cInterfaceAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cInterfaceInterfaceCrossReference_0 = (CrossReference)cInterfaceAssignment.eContents().get(0);
		private final RuleCall cInterfaceInterfaceEStringParserRuleCall_0_1 = (RuleCall)cInterfaceInterfaceCrossReference_0.eContents().get(1);
		
		//RequiredRole returns assembly::RequiredRole:
		//    interface=[repository::Interface|EString];
		@Override public ParserRule getRule() { return rule; }
		
		//interface=[repository::Interface|EString]
		public Assignment getInterfaceAssignment() { return cInterfaceAssignment; }
		
		//[repository::Interface|EString]
		public CrossReference getInterfaceInterfaceCrossReference_0() { return cInterfaceInterfaceCrossReference_0; }
		
		//EString
		public RuleCall getInterfaceInterfaceEStringParserRuleCall_0_1() { return cInterfaceInterfaceEStringParserRuleCall_0_1; }
	}
	public class ComponentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.CBS.Component");
		private final RuleCall cAtomicComponentParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//// region repository
		//Component returns repository::Component:
		//    AtomicComponent;
		@Override public ParserRule getRule() { return rule; }
		
		//AtomicComponent
		public RuleCall getAtomicComponentParserRuleCall() { return cAtomicComponentParserRuleCall; }
	}
	public class InterfaceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.CBS.Interface");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cInterfaceAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cInterfaceKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Assignment cSignaturesAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final RuleCall cSignaturesSignatureParserRuleCall_4_0_0 = (RuleCall)cSignaturesAssignment_4_0.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cGroup_4.eContents().get(1);
		private final Keyword cCommaKeyword_4_1_0 = (Keyword)cGroup_4_1.eContents().get(0);
		private final Assignment cSignaturesAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cSignaturesSignatureParserRuleCall_4_1_1_0 = (RuleCall)cSignaturesAssignment_4_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Interface returns repository::Interface:
		//    {repository::Interface}
		//    'interface'
		//    name=EString
		//    '{'
		//        (signatures+=Signature ( "," signatures+=Signature)*)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{repository::Interface}
		//'interface'
		//name=EString
		//'{'
		//    (signatures+=Signature ( "," signatures+=Signature)*)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{repository::Interface}
		public Action getInterfaceAction_0() { return cInterfaceAction_0; }
		
		//'interface'
		public Keyword getInterfaceKeyword_1() { return cInterfaceKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//(signatures+=Signature ( "," signatures+=Signature)*)?
		public Group getGroup_4() { return cGroup_4; }
		
		//signatures+=Signature
		public Assignment getSignaturesAssignment_4_0() { return cSignaturesAssignment_4_0; }
		
		//Signature
		public RuleCall getSignaturesSignatureParserRuleCall_4_0_0() { return cSignaturesSignatureParserRuleCall_4_0_0; }
		
		//( "," signatures+=Signature)*
		public Group getGroup_4_1() { return cGroup_4_1; }
		
		//","
		public Keyword getCommaKeyword_4_1_0() { return cCommaKeyword_4_1_0; }
		
		//signatures+=Signature
		public Assignment getSignaturesAssignment_4_1_1() { return cSignaturesAssignment_4_1_1; }
		
		//Signature
		public RuleCall getSignaturesSignatureParserRuleCall_4_1_1_0() { return cSignaturesSignatureParserRuleCall_4_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class AtomicComponentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.CBS.AtomicComponent");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAtomicComponentAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cAtomicComponentKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cRequiresKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cRequiresAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final CrossReference cRequiresInterfaceCrossReference_4_2_0 = (CrossReference)cRequiresAssignment_4_2.eContents().get(0);
		private final RuleCall cRequiresInterfaceEStringParserRuleCall_4_2_0_1 = (RuleCall)cRequiresInterfaceCrossReference_4_2_0.eContents().get(1);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cRequiresAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final CrossReference cRequiresInterfaceCrossReference_4_3_1_0 = (CrossReference)cRequiresAssignment_4_3_1.eContents().get(0);
		private final RuleCall cRequiresInterfaceEStringParserRuleCall_4_3_1_0_1 = (RuleCall)cRequiresInterfaceCrossReference_4_3_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cProvidesKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cProvidesAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final CrossReference cProvidesInterfaceCrossReference_5_2_0 = (CrossReference)cProvidesAssignment_5_2.eContents().get(0);
		private final RuleCall cProvidesInterfaceEStringParserRuleCall_5_2_0_1 = (RuleCall)cProvidesInterfaceCrossReference_5_2_0.eContents().get(1);
		private final Group cGroup_5_3 = (Group)cGroup_5.eContents().get(3);
		private final Keyword cCommaKeyword_5_3_0 = (Keyword)cGroup_5_3.eContents().get(0);
		private final Assignment cProvidesAssignment_5_3_1 = (Assignment)cGroup_5_3.eContents().get(1);
		private final CrossReference cProvidesInterfaceCrossReference_5_3_1_0 = (CrossReference)cProvidesAssignment_5_3_1.eContents().get(0);
		private final RuleCall cProvidesInterfaceEStringParserRuleCall_5_3_1_0_1 = (RuleCall)cProvidesInterfaceCrossReference_5_3_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cServicesKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cServicesAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cServicesServiceParserRuleCall_6_2_0 = (RuleCall)cServicesAssignment_6_2.eContents().get(0);
		private final Group cGroup_6_3 = (Group)cGroup_6.eContents().get(3);
		private final Keyword cCommaKeyword_6_3_0 = (Keyword)cGroup_6_3.eContents().get(0);
		private final Assignment cServicesAssignment_6_3_1 = (Assignment)cGroup_6_3.eContents().get(1);
		private final RuleCall cServicesServiceParserRuleCall_6_3_1_0 = (RuleCall)cServicesAssignment_6_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6_4 = (Keyword)cGroup_6.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//AtomicComponent returns repository::AtomicComponent:
		//    {repository::AtomicComponent}
		//    'AtomicComponent'
		//    name=EString
		//    '{'
		//        ('requires' '{' requires+=[repository::Interface|EString] ( "," requires+=[repository::Interface|EString])* '}' )?
		//        ('provides' '{' provides+=[repository::Interface|EString] ( "," provides+=[repository::Interface|EString])* '}' )?
		//        ('services' '{' services+=Service ( "," services+=Service)* '}' )?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{repository::AtomicComponent}
		//'AtomicComponent'
		//name=EString
		//'{'
		//    ('requires' '{' requires+=[repository::Interface|EString] ( "," requires+=[repository::Interface|EString])* '}' )?
		//    ('provides' '{' provides+=[repository::Interface|EString] ( "," provides+=[repository::Interface|EString])* '}' )?
		//    ('services' '{' services+=Service ( "," services+=Service)* '}' )?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{repository::AtomicComponent}
		public Action getAtomicComponentAction_0() { return cAtomicComponentAction_0; }
		
		//'AtomicComponent'
		public Keyword getAtomicComponentKeyword_1() { return cAtomicComponentKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('requires' '{' requires+=[repository::Interface|EString] ( "," requires+=[repository::Interface|EString])* '}' )?
		public Group getGroup_4() { return cGroup_4; }
		
		//'requires'
		public Keyword getRequiresKeyword_4_0() { return cRequiresKeyword_4_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }
		
		//requires+=[repository::Interface|EString]
		public Assignment getRequiresAssignment_4_2() { return cRequiresAssignment_4_2; }
		
		//[repository::Interface|EString]
		public CrossReference getRequiresInterfaceCrossReference_4_2_0() { return cRequiresInterfaceCrossReference_4_2_0; }
		
		//EString
		public RuleCall getRequiresInterfaceEStringParserRuleCall_4_2_0_1() { return cRequiresInterfaceEStringParserRuleCall_4_2_0_1; }
		
		//( "," requires+=[repository::Interface|EString])*
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }
		
		//requires+=[repository::Interface|EString]
		public Assignment getRequiresAssignment_4_3_1() { return cRequiresAssignment_4_3_1; }
		
		//[repository::Interface|EString]
		public CrossReference getRequiresInterfaceCrossReference_4_3_1_0() { return cRequiresInterfaceCrossReference_4_3_1_0; }
		
		//EString
		public RuleCall getRequiresInterfaceEStringParserRuleCall_4_3_1_0_1() { return cRequiresInterfaceEStringParserRuleCall_4_3_1_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4_4() { return cRightCurlyBracketKeyword_4_4; }
		
		//('provides' '{' provides+=[repository::Interface|EString] ( "," provides+=[repository::Interface|EString])* '}' )?
		public Group getGroup_5() { return cGroup_5; }
		
		//'provides'
		public Keyword getProvidesKeyword_5_0() { return cProvidesKeyword_5_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5_1() { return cLeftCurlyBracketKeyword_5_1; }
		
		//provides+=[repository::Interface|EString]
		public Assignment getProvidesAssignment_5_2() { return cProvidesAssignment_5_2; }
		
		//[repository::Interface|EString]
		public CrossReference getProvidesInterfaceCrossReference_5_2_0() { return cProvidesInterfaceCrossReference_5_2_0; }
		
		//EString
		public RuleCall getProvidesInterfaceEStringParserRuleCall_5_2_0_1() { return cProvidesInterfaceEStringParserRuleCall_5_2_0_1; }
		
		//( "," provides+=[repository::Interface|EString])*
		public Group getGroup_5_3() { return cGroup_5_3; }
		
		//","
		public Keyword getCommaKeyword_5_3_0() { return cCommaKeyword_5_3_0; }
		
		//provides+=[repository::Interface|EString]
		public Assignment getProvidesAssignment_5_3_1() { return cProvidesAssignment_5_3_1; }
		
		//[repository::Interface|EString]
		public CrossReference getProvidesInterfaceCrossReference_5_3_1_0() { return cProvidesInterfaceCrossReference_5_3_1_0; }
		
		//EString
		public RuleCall getProvidesInterfaceEStringParserRuleCall_5_3_1_0_1() { return cProvidesInterfaceEStringParserRuleCall_5_3_1_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5_4() { return cRightCurlyBracketKeyword_5_4; }
		
		//('services' '{' services+=Service ( "," services+=Service)* '}' )?
		public Group getGroup_6() { return cGroup_6; }
		
		//'services'
		public Keyword getServicesKeyword_6_0() { return cServicesKeyword_6_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6_1() { return cLeftCurlyBracketKeyword_6_1; }
		
		//services+=Service
		public Assignment getServicesAssignment_6_2() { return cServicesAssignment_6_2; }
		
		//Service
		public RuleCall getServicesServiceParserRuleCall_6_2_0() { return cServicesServiceParserRuleCall_6_2_0; }
		
		//( "," services+=Service)*
		public Group getGroup_6_3() { return cGroup_6_3; }
		
		//","
		public Keyword getCommaKeyword_6_3_0() { return cCommaKeyword_6_3_0; }
		
		//services+=Service
		public Assignment getServicesAssignment_6_3_1() { return cServicesAssignment_6_3_1; }
		
		//Service
		public RuleCall getServicesServiceParserRuleCall_6_3_1_0() { return cServicesServiceParserRuleCall_6_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6_4() { return cRightCurlyBracketKeyword_6_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class SignatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.CBS.Signature");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cReturnTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cReturnTypeTypeCrossReference_0_0 = (CrossReference)cReturnTypeAssignment_0.eContents().get(0);
		private final RuleCall cReturnTypeTypeEStringParserRuleCall_0_0_1 = (RuleCall)cReturnTypeTypeCrossReference_0_0.eContents().get(1);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cParametersAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cParametersParameterParserRuleCall_2_1_0 = (RuleCall)cParametersAssignment_2_1.eContents().get(0);
		private final Group cGroup_2_2 = (Group)cGroup_2.eContents().get(2);
		private final Keyword cCommaKeyword_2_2_0 = (Keyword)cGroup_2_2.eContents().get(0);
		private final Assignment cParametersAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final RuleCall cParametersParameterParserRuleCall_2_2_1_0 = (RuleCall)cParametersAssignment_2_2_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2_3 = (Keyword)cGroup_2.eContents().get(3);
		
		//Signature returns repository::Signature:
		//    returnType=[types::Type|EString]
		//    name=EString
		//    ('(' parameters+=Parameter ( "," parameters+=Parameter)* ')' )?;
		@Override public ParserRule getRule() { return rule; }
		
		//returnType=[types::Type|EString]
		//name=EString
		//('(' parameters+=Parameter ( "," parameters+=Parameter)* ')' )?
		public Group getGroup() { return cGroup; }
		
		//returnType=[types::Type|EString]
		public Assignment getReturnTypeAssignment_0() { return cReturnTypeAssignment_0; }
		
		//[types::Type|EString]
		public CrossReference getReturnTypeTypeCrossReference_0_0() { return cReturnTypeTypeCrossReference_0_0; }
		
		//EString
		public RuleCall getReturnTypeTypeEStringParserRuleCall_0_0_1() { return cReturnTypeTypeEStringParserRuleCall_0_0_1; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//('(' parameters+=Parameter ( "," parameters+=Parameter)* ')' )?
		public Group getGroup_2() { return cGroup_2; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2_0() { return cLeftParenthesisKeyword_2_0; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_2_1() { return cParametersAssignment_2_1; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_2_1_0() { return cParametersParameterParserRuleCall_2_1_0; }
		
		//( "," parameters+=Parameter)*
		public Group getGroup_2_2() { return cGroup_2_2; }
		
		//","
		public Keyword getCommaKeyword_2_2_0() { return cCommaKeyword_2_2_0; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_2_2_1() { return cParametersAssignment_2_2_1; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_2_2_1_0() { return cParametersParameterParserRuleCall_2_2_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_2_3() { return cRightParenthesisKeyword_2_3; }
	}
	public class ParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.CBS.Parameter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cTypeParameterTypeCrossReference_0_0 = (CrossReference)cTypeAssignment_0.eContents().get(0);
		private final RuleCall cTypeParameterTypeEStringParserRuleCall_0_0_1 = (RuleCall)cTypeParameterTypeCrossReference_0_0.eContents().get(1);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//Parameter returns repository::Parameter:
		//    type=[types::ParameterType|EString]
		//    name=EString;
		@Override public ParserRule getRule() { return rule; }
		
		//type=[types::ParameterType|EString]
		//name=EString
		public Group getGroup() { return cGroup; }
		
		//type=[types::ParameterType|EString]
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }
		
		//[types::ParameterType|EString]
		public CrossReference getTypeParameterTypeCrossReference_0_0() { return cTypeParameterTypeCrossReference_0_0; }
		
		//EString
		public RuleCall getTypeParameterTypeEStringParserRuleCall_0_0_1() { return cTypeParameterTypeEStringParserRuleCall_0_0_1; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
	}
	public class TypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.CBS.Type");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cVoidParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cSimpleTypeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cComplexTypeParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//// region types
		//Type returns types::Type:
		//    Void | SimpleType | ComplexType;
		@Override public ParserRule getRule() { return rule; }
		
		//Void | SimpleType | ComplexType
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Void
		public RuleCall getVoidParserRuleCall_0() { return cVoidParserRuleCall_0; }
		
		//SimpleType
		public RuleCall getSimpleTypeParserRuleCall_1() { return cSimpleTypeParserRuleCall_1; }
		
		//ComplexType
		public RuleCall getComplexTypeParserRuleCall_2() { return cComplexTypeParserRuleCall_2; }
	}
	public class ParameterTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.CBS.ParameterType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSimpleTypeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cComplexTypeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cCollectionTypeParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//ParameterType returns types::ParameterType:
		//    SimpleType | ComplexType | CollectionType;
		@Override public ParserRule getRule() { return rule; }
		
		//SimpleType | ComplexType | CollectionType
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//SimpleType
		public RuleCall getSimpleTypeParserRuleCall_0() { return cSimpleTypeParserRuleCall_0; }
		
		//ComplexType
		public RuleCall getComplexTypeParserRuleCall_1() { return cComplexTypeParserRuleCall_1; }
		
		//CollectionType
		public RuleCall getCollectionTypeParserRuleCall_2() { return cCollectionTypeParserRuleCall_2; }
	}
	public class SimpleTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.CBS.SimpleType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTypeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTypeSimpleTypeEnumEnumRuleCall_1_0 = (RuleCall)cTypeAssignment_1.eContents().get(0);
		
		//SimpleType returns types::SimpleType:
		//    'type' type=SimpleTypeEnum;
		@Override public ParserRule getRule() { return rule; }
		
		//'type' type=SimpleTypeEnum
		public Group getGroup() { return cGroup; }
		
		//'type'
		public Keyword getTypeKeyword_0() { return cTypeKeyword_0; }
		
		//type=SimpleTypeEnum
		public Assignment getTypeAssignment_1() { return cTypeAssignment_1; }
		
		//SimpleTypeEnum
		public RuleCall getTypeSimpleTypeEnumEnumRuleCall_1_0() { return cTypeSimpleTypeEnumEnumRuleCall_1_0; }
	}
	public class ComplexTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.CBS.ComplexType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cComplexTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cTypeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Assignment cMembersAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final RuleCall cMembersComplexMemberParserRuleCall_3_0_0 = (RuleCall)cMembersAssignment_3_0.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cGroup_3.eContents().get(1);
		private final Keyword cCommaKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Assignment cMembersAssignment_3_1_1 = (Assignment)cGroup_3_1.eContents().get(1);
		private final RuleCall cMembersComplexMemberParserRuleCall_3_1_1_0 = (RuleCall)cMembersAssignment_3_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//ComplexType returns types::ComplexType:
		//    {types::ComplexType}
		//    'type'
		//    '{'
		//        (members+=ComplexMember ( "," members+=ComplexMember)* )?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{types::ComplexType}
		//'type'
		//'{'
		//    (members+=ComplexMember ( "," members+=ComplexMember)* )?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{types::ComplexType}
		public Action getComplexTypeAction_0() { return cComplexTypeAction_0; }
		
		//'type'
		public Keyword getTypeKeyword_1() { return cTypeKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//(members+=ComplexMember ( "," members+=ComplexMember)* )?
		public Group getGroup_3() { return cGroup_3; }
		
		//members+=ComplexMember
		public Assignment getMembersAssignment_3_0() { return cMembersAssignment_3_0; }
		
		//ComplexMember
		public RuleCall getMembersComplexMemberParserRuleCall_3_0_0() { return cMembersComplexMemberParserRuleCall_3_0_0; }
		
		//( "," members+=ComplexMember)*
		public Group getGroup_3_1() { return cGroup_3_1; }
		
		//","
		public Keyword getCommaKeyword_3_1_0() { return cCommaKeyword_3_1_0; }
		
		//members+=ComplexMember
		public Assignment getMembersAssignment_3_1_1() { return cMembersAssignment_3_1_1; }
		
		//ComplexMember
		public RuleCall getMembersComplexMemberParserRuleCall_3_1_1_0() { return cMembersComplexMemberParserRuleCall_3_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class ComplexMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.CBS.ComplexMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameEStringParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cTypeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cTypeParameterTypeCrossReference_2_0 = (CrossReference)cTypeAssignment_2.eContents().get(0);
		private final RuleCall cTypeParameterTypeEStringParserRuleCall_2_0_1 = (RuleCall)cTypeParameterTypeCrossReference_2_0.eContents().get(1);
		
		//ComplexMember returns types::ComplexMember:
		//    name=EString ':' type=[types::ParameterType|EString];
		@Override public ParserRule getRule() { return rule; }
		
		//name=EString ':' type=[types::ParameterType|EString]
		public Group getGroup() { return cGroup; }
		
		//name=EString
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_0_0() { return cNameEStringParserRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//type=[types::ParameterType|EString]
		public Assignment getTypeAssignment_2() { return cTypeAssignment_2; }
		
		//[types::ParameterType|EString]
		public CrossReference getTypeParameterTypeCrossReference_2_0() { return cTypeParameterTypeCrossReference_2_0; }
		
		//EString
		public RuleCall getTypeParameterTypeEStringParserRuleCall_2_0_1() { return cTypeParameterTypeEStringParserRuleCall_2_0_1; }
	}
	public class VoidElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.CBS.Void");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cVoidAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cVoidKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//Void returns types::Void:
		//    {types::Void}
		//    'Void';
		@Override public ParserRule getRule() { return rule; }
		
		//{types::Void}
		//'Void'
		public Group getGroup() { return cGroup; }
		
		//{types::Void}
		public Action getVoidAction_0() { return cVoidAction_0; }
		
		//'Void'
		public Keyword getVoidKeyword_1() { return cVoidKeyword_1; }
	}
	public class CollectionTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.CBS.CollectionType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cTypeCollectionTypeEnumEnumRuleCall_0_0 = (RuleCall)cTypeAssignment_0.eContents().get(0);
		private final Keyword cLessThanSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cInnerTypeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cInnerTypeParameterTypeCrossReference_2_0 = (CrossReference)cInnerTypeAssignment_2.eContents().get(0);
		private final RuleCall cInnerTypeParameterTypeEStringParserRuleCall_2_0_1 = (RuleCall)cInnerTypeParameterTypeCrossReference_2_0.eContents().get(1);
		private final Keyword cGreaterThanSignKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//CollectionType returns types::CollectionType:
		//    type=CollectionTypeEnum '<' innerType=[types::ParameterType|EString] '>';
		@Override public ParserRule getRule() { return rule; }
		
		//type=CollectionTypeEnum '<' innerType=[types::ParameterType|EString] '>'
		public Group getGroup() { return cGroup; }
		
		//type=CollectionTypeEnum
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }
		
		//CollectionTypeEnum
		public RuleCall getTypeCollectionTypeEnumEnumRuleCall_0_0() { return cTypeCollectionTypeEnumEnumRuleCall_0_0; }
		
		//'<'
		public Keyword getLessThanSignKeyword_1() { return cLessThanSignKeyword_1; }
		
		//innerType=[types::ParameterType|EString]
		public Assignment getInnerTypeAssignment_2() { return cInnerTypeAssignment_2; }
		
		//[types::ParameterType|EString]
		public CrossReference getInnerTypeParameterTypeCrossReference_2_0() { return cInnerTypeParameterTypeCrossReference_2_0; }
		
		//EString
		public RuleCall getInnerTypeParameterTypeEStringParserRuleCall_2_0_1() { return cInnerTypeParameterTypeEStringParserRuleCall_2_0_1; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_3() { return cGreaterThanSignKeyword_3; }
	}
	public class AbstractActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.CBS.AbstractAction");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cInternalActionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cExternalCallActionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cBranchActionParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cLoopActionParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//// region behavioral description
		//AbstractAction returns behavioraldescription::AbstractAction:
		//    InternalAction | ExternalCallAction | BranchAction | LoopAction;
		@Override public ParserRule getRule() { return rule; }
		
		//InternalAction | ExternalCallAction | BranchAction | LoopAction
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//InternalAction
		public RuleCall getInternalActionParserRuleCall_0() { return cInternalActionParserRuleCall_0; }
		
		//ExternalCallAction
		public RuleCall getExternalCallActionParserRuleCall_1() { return cExternalCallActionParserRuleCall_1; }
		
		//BranchAction
		public RuleCall getBranchActionParserRuleCall_2() { return cBranchActionParserRuleCall_2; }
		
		//LoopAction
		public RuleCall getLoopActionParserRuleCall_3() { return cLoopActionParserRuleCall_3; }
	}
	public class ServiceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.CBS.Service");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cServiceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cImplementsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cImplementsSignatureCrossReference_1_0 = (CrossReference)cImplementsAssignment_1.eContents().get(0);
		private final RuleCall cImplementsSignatureEStringParserRuleCall_1_0_1 = (RuleCall)cImplementsSignatureCrossReference_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cActionsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cActionsAbstractActionParserRuleCall_3_0 = (RuleCall)cActionsAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cSemicolonKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cActionsAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cActionsAbstractActionParserRuleCall_4_1_0 = (RuleCall)cActionsAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Service returns behavioraldescription::Service:
		//    'Service' implements=[repository::Signature|EString]
		//    '{'
		//        actions+=AbstractAction ( ";" actions+=AbstractAction)*
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Service' implements=[repository::Signature|EString]
		//'{'
		//    actions+=AbstractAction ( ";" actions+=AbstractAction)*
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Service'
		public Keyword getServiceKeyword_0() { return cServiceKeyword_0; }
		
		//implements=[repository::Signature|EString]
		public Assignment getImplementsAssignment_1() { return cImplementsAssignment_1; }
		
		//[repository::Signature|EString]
		public CrossReference getImplementsSignatureCrossReference_1_0() { return cImplementsSignatureCrossReference_1_0; }
		
		//EString
		public RuleCall getImplementsSignatureEStringParserRuleCall_1_0_1() { return cImplementsSignatureEStringParserRuleCall_1_0_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//actions+=AbstractAction
		public Assignment getActionsAssignment_3() { return cActionsAssignment_3; }
		
		//AbstractAction
		public RuleCall getActionsAbstractActionParserRuleCall_3_0() { return cActionsAbstractActionParserRuleCall_3_0; }
		
		//( ";" actions+=AbstractAction)*
		public Group getGroup_4() { return cGroup_4; }
		
		//";"
		public Keyword getSemicolonKeyword_4_0() { return cSemicolonKeyword_4_0; }
		
		//actions+=AbstractAction
		public Assignment getActionsAssignment_4_1() { return cActionsAssignment_4_1; }
		
		//AbstractAction
		public RuleCall getActionsAbstractActionParserRuleCall_4_1_0() { return cActionsAbstractActionParserRuleCall_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class InternalActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.CBS.InternalAction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cInternalActionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cInternalCallKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//InternalAction returns behavioraldescription::InternalAction:
		//    {behavioraldescription::InternalAction}
		//    'internalCall';
		@Override public ParserRule getRule() { return rule; }
		
		//{behavioraldescription::InternalAction}
		//'internalCall'
		public Group getGroup() { return cGroup; }
		
		//{behavioraldescription::InternalAction}
		public Action getInternalActionAction_0() { return cInternalActionAction_0; }
		
		//'internalCall'
		public Keyword getInternalCallKeyword_1() { return cInternalCallKeyword_1; }
	}
	public class ExternalCallActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.CBS.ExternalCallAction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cExternalCallKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cRequiredServiceAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cRequiredServiceSignatureCrossReference_1_0 = (CrossReference)cRequiredServiceAssignment_1.eContents().get(0);
		private final RuleCall cRequiredServiceSignatureEStringParserRuleCall_1_0_1 = (RuleCall)cRequiredServiceSignatureCrossReference_1_0.eContents().get(1);
		
		//ExternalCallAction returns behavioraldescription::ExternalCallAction:
		//    'externalCall' requiredService=[repository::Signature|EString];
		@Override public ParserRule getRule() { return rule; }
		
		//'externalCall' requiredService=[repository::Signature|EString]
		public Group getGroup() { return cGroup; }
		
		//'externalCall'
		public Keyword getExternalCallKeyword_0() { return cExternalCallKeyword_0; }
		
		//requiredService=[repository::Signature|EString]
		public Assignment getRequiredServiceAssignment_1() { return cRequiredServiceAssignment_1; }
		
		//[repository::Signature|EString]
		public CrossReference getRequiredServiceSignatureCrossReference_1_0() { return cRequiredServiceSignatureCrossReference_1_0; }
		
		//EString
		public RuleCall getRequiredServiceSignatureEStringParserRuleCall_1_0_1() { return cRequiredServiceSignatureEStringParserRuleCall_1_0_1; }
	}
	public class BranchActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.CBS.BranchAction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cBranchKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cBranchesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cBranchesBranchTransitionParserRuleCall_2_0 = (RuleCall)cBranchesAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cBranchesAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cBranchesBranchTransitionParserRuleCall_3_1_0 = (RuleCall)cBranchesAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//BranchAction returns behavioraldescription::BranchAction:
		//    'branch'
		//    '{'
		//        branches+=BranchTransition ( "," branches+=BranchTransition)*
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'branch'
		//'{'
		//    branches+=BranchTransition ( "," branches+=BranchTransition)*
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'branch'
		public Keyword getBranchKeyword_0() { return cBranchKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//branches+=BranchTransition
		public Assignment getBranchesAssignment_2() { return cBranchesAssignment_2; }
		
		//BranchTransition
		public RuleCall getBranchesBranchTransitionParserRuleCall_2_0() { return cBranchesBranchTransitionParserRuleCall_2_0; }
		
		//( "," branches+=BranchTransition)*
		public Group getGroup_3() { return cGroup_3; }
		
		//","
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }
		
		//branches+=BranchTransition
		public Assignment getBranchesAssignment_3_1() { return cBranchesAssignment_3_1; }
		
		//BranchTransition
		public RuleCall getBranchesBranchTransitionParserRuleCall_3_1_0() { return cBranchesBranchTransitionParserRuleCall_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class BranchTransitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.CBS.BranchTransition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cBranchConditionAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cBranchConditionEStringParserRuleCall_0_0 = (RuleCall)cBranchConditionAssignment_0.eContents().get(0);
		private final Keyword cQuestionMarkKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cActionsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cActionsAbstractActionParserRuleCall_3_0 = (RuleCall)cActionsAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cActionsAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cActionsAbstractActionParserRuleCall_4_1_0 = (RuleCall)cActionsAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//BranchTransition returns behavioraldescription::BranchTransition:
		//    branchCondition=EString '?'
		//    '{'
		//        actions+=AbstractAction ( "," actions+=AbstractAction)*
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//branchCondition=EString '?'
		//'{'
		//    actions+=AbstractAction ( "," actions+=AbstractAction)*
		//'}'
		public Group getGroup() { return cGroup; }
		
		//branchCondition=EString
		public Assignment getBranchConditionAssignment_0() { return cBranchConditionAssignment_0; }
		
		//EString
		public RuleCall getBranchConditionEStringParserRuleCall_0_0() { return cBranchConditionEStringParserRuleCall_0_0; }
		
		//'?'
		public Keyword getQuestionMarkKeyword_1() { return cQuestionMarkKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//actions+=AbstractAction
		public Assignment getActionsAssignment_3() { return cActionsAssignment_3; }
		
		//AbstractAction
		public RuleCall getActionsAbstractActionParserRuleCall_3_0() { return cActionsAbstractActionParserRuleCall_3_0; }
		
		//( "," actions+=AbstractAction)*
		public Group getGroup_4() { return cGroup_4; }
		
		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }
		
		//actions+=AbstractAction
		public Assignment getActionsAssignment_4_1() { return cActionsAssignment_4_1; }
		
		//AbstractAction
		public RuleCall getActionsAbstractActionParserRuleCall_4_1_0() { return cActionsAbstractActionParserRuleCall_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class LoopActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.CBS.LoopAction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cLoopActionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLoopKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cBodyActionsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cBodyActionsAbstractActionParserRuleCall_3_0 = (RuleCall)cBodyActionsAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cBodyActionsAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cBodyActionsAbstractActionParserRuleCall_4_1_0 = (RuleCall)cBodyActionsAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//LoopAction returns behavioraldescription::LoopAction:
		//    {behavioraldescription::LoopAction}
		//    'loop'
		//    '{'
		//        bodyActions+=AbstractAction ( "," bodyActions+=AbstractAction)*
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{behavioraldescription::LoopAction}
		//'loop'
		//'{'
		//    bodyActions+=AbstractAction ( "," bodyActions+=AbstractAction)*
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{behavioraldescription::LoopAction}
		public Action getLoopActionAction_0() { return cLoopActionAction_0; }
		
		//'loop'
		public Keyword getLoopKeyword_1() { return cLoopKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//bodyActions+=AbstractAction
		public Assignment getBodyActionsAssignment_3() { return cBodyActionsAssignment_3; }
		
		//AbstractAction
		public RuleCall getBodyActionsAbstractActionParserRuleCall_3_0() { return cBodyActionsAbstractActionParserRuleCall_3_0; }
		
		//( "," bodyActions+=AbstractAction)*
		public Group getGroup_4() { return cGroup_4; }
		
		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }
		
		//bodyActions+=AbstractAction
		public Assignment getBodyActionsAssignment_4_1() { return cBodyActionsAssignment_4_1; }
		
		//AbstractAction
		public RuleCall getBodyActionsAbstractActionParserRuleCall_4_1_0() { return cBodyActionsAbstractActionParserRuleCall_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.CBS.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//// region helper
		//EString returns ecore::EString:
		//    STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	
	public class SimpleTypeEnumElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.CBS.SimpleTypeEnum");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cStringEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cStringStringKeyword_0_0 = (Keyword)cStringEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cIntEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cIntIntKeyword_1_0 = (Keyword)cIntEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cBooleanEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cBooleanBooleanKeyword_2_0 = (Keyword)cBooleanEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cCharEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cCharCharKeyword_3_0 = (Keyword)cCharEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cDateEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cDateDateKeyword_4_0 = (Keyword)cDateEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cDoubleEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cDoubleDoubleKeyword_5_0 = (Keyword)cDoubleEnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cFloatEnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cFloatFloatKeyword_6_0 = (Keyword)cFloatEnumLiteralDeclaration_6.eContents().get(0);
		private final EnumLiteralDeclaration cLongEnumLiteralDeclaration_7 = (EnumLiteralDeclaration)cAlternatives.eContents().get(7);
		private final Keyword cLongLongKeyword_7_0 = (Keyword)cLongEnumLiteralDeclaration_7.eContents().get(0);
		
		//enum SimpleTypeEnum returns types::SimpleTypeEnum:
		//    String = 'String' | Int = 'Int' | Boolean = 'Boolean' | Char = 'Char' | Date = 'Date' | Double = 'Double' | Float = 'Float' | Long = 'Long';
		public EnumRule getRule() { return rule; }
		
		//String = 'String' | Int = 'Int' | Boolean = 'Boolean' | Char = 'Char' | Date = 'Date' | Double = 'Double' | Float = 'Float' | Long = 'Long'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//String = 'String'
		public EnumLiteralDeclaration getStringEnumLiteralDeclaration_0() { return cStringEnumLiteralDeclaration_0; }
		
		//'String'
		public Keyword getStringStringKeyword_0_0() { return cStringStringKeyword_0_0; }
		
		//Int = 'Int'
		public EnumLiteralDeclaration getIntEnumLiteralDeclaration_1() { return cIntEnumLiteralDeclaration_1; }
		
		//'Int'
		public Keyword getIntIntKeyword_1_0() { return cIntIntKeyword_1_0; }
		
		//Boolean = 'Boolean'
		public EnumLiteralDeclaration getBooleanEnumLiteralDeclaration_2() { return cBooleanEnumLiteralDeclaration_2; }
		
		//'Boolean'
		public Keyword getBooleanBooleanKeyword_2_0() { return cBooleanBooleanKeyword_2_0; }
		
		//Char = 'Char'
		public EnumLiteralDeclaration getCharEnumLiteralDeclaration_3() { return cCharEnumLiteralDeclaration_3; }
		
		//'Char'
		public Keyword getCharCharKeyword_3_0() { return cCharCharKeyword_3_0; }
		
		//Date = 'Date'
		public EnumLiteralDeclaration getDateEnumLiteralDeclaration_4() { return cDateEnumLiteralDeclaration_4; }
		
		//'Date'
		public Keyword getDateDateKeyword_4_0() { return cDateDateKeyword_4_0; }
		
		//Double = 'Double'
		public EnumLiteralDeclaration getDoubleEnumLiteralDeclaration_5() { return cDoubleEnumLiteralDeclaration_5; }
		
		//'Double'
		public Keyword getDoubleDoubleKeyword_5_0() { return cDoubleDoubleKeyword_5_0; }
		
		//Float = 'Float'
		public EnumLiteralDeclaration getFloatEnumLiteralDeclaration_6() { return cFloatEnumLiteralDeclaration_6; }
		
		//'Float'
		public Keyword getFloatFloatKeyword_6_0() { return cFloatFloatKeyword_6_0; }
		
		//Long = 'Long'
		public EnumLiteralDeclaration getLongEnumLiteralDeclaration_7() { return cLongEnumLiteralDeclaration_7; }
		
		//'Long'
		public Keyword getLongLongKeyword_7_0() { return cLongLongKeyword_7_0; }
	}
	public class CollectionTypeEnumElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.CBS.CollectionTypeEnum");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cListEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cListListKeyword_0_0 = (Keyword)cListEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cMapEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cMapMapKeyword_1_0 = (Keyword)cMapEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum CollectionTypeEnum returns types::CollectionTypeEnum:
		//    List = 'List' | Map = 'Map';
		public EnumRule getRule() { return rule; }
		
		//List = 'List' | Map = 'Map'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//List = 'List'
		public EnumLiteralDeclaration getListEnumLiteralDeclaration_0() { return cListEnumLiteralDeclaration_0; }
		
		//'List'
		public Keyword getListListKeyword_0_0() { return cListListKeyword_0_0; }
		
		//Map = 'Map'
		public EnumLiteralDeclaration getMapEnumLiteralDeclaration_1() { return cMapEnumLiteralDeclaration_1; }
		
		//'Map'
		public Keyword getMapMapKeyword_1_0() { return cMapMapKeyword_1_0; }
	}
	
	private final SystemElements pSystem;
	private final AllocationElements pAllocation;
	private final AllocationContextElements pAllocationContext;
	private final EnvironmentElements pEnvironment;
	private final ContainerElements pContainer;
	private final LinkerElements pLinker;
	private final AssemblyContextElements pAssemblyContext;
	private final AssemblyConnectorElements pAssemblyConnector;
	private final RequiredDelegationConnectorElements pRequiredDelegationConnector;
	private final ProvidedDelegationConnectorElements pProvidedDelegationConnector;
	private final ProvidedRoleElements pProvidedRole;
	private final RequiredRoleElements pRequiredRole;
	private final ComponentElements pComponent;
	private final InterfaceElements pInterface;
	private final AtomicComponentElements pAtomicComponent;
	private final SignatureElements pSignature;
	private final ParameterElements pParameter;
	private final TypeElements pType;
	private final ParameterTypeElements pParameterType;
	private final SimpleTypeElements pSimpleType;
	private final ComplexTypeElements pComplexType;
	private final SimpleTypeEnumElements eSimpleTypeEnum;
	private final ComplexMemberElements pComplexMember;
	private final VoidElements pVoid;
	private final CollectionTypeElements pCollectionType;
	private final CollectionTypeEnumElements eCollectionTypeEnum;
	private final AbstractActionElements pAbstractAction;
	private final ServiceElements pService;
	private final InternalActionElements pInternalAction;
	private final ExternalCallActionElements pExternalCallAction;
	private final BranchActionElements pBranchAction;
	private final BranchTransitionElements pBranchTransition;
	private final LoopActionElements pLoopAction;
	private final EStringElements pEString;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public CBSGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pSystem = new SystemElements();
		this.pAllocation = new AllocationElements();
		this.pAllocationContext = new AllocationContextElements();
		this.pEnvironment = new EnvironmentElements();
		this.pContainer = new ContainerElements();
		this.pLinker = new LinkerElements();
		this.pAssemblyContext = new AssemblyContextElements();
		this.pAssemblyConnector = new AssemblyConnectorElements();
		this.pRequiredDelegationConnector = new RequiredDelegationConnectorElements();
		this.pProvidedDelegationConnector = new ProvidedDelegationConnectorElements();
		this.pProvidedRole = new ProvidedRoleElements();
		this.pRequiredRole = new RequiredRoleElements();
		this.pComponent = new ComponentElements();
		this.pInterface = new InterfaceElements();
		this.pAtomicComponent = new AtomicComponentElements();
		this.pSignature = new SignatureElements();
		this.pParameter = new ParameterElements();
		this.pType = new TypeElements();
		this.pParameterType = new ParameterTypeElements();
		this.pSimpleType = new SimpleTypeElements();
		this.pComplexType = new ComplexTypeElements();
		this.eSimpleTypeEnum = new SimpleTypeEnumElements();
		this.pComplexMember = new ComplexMemberElements();
		this.pVoid = new VoidElements();
		this.pCollectionType = new CollectionTypeElements();
		this.eCollectionTypeEnum = new CollectionTypeEnumElements();
		this.pAbstractAction = new AbstractActionElements();
		this.pService = new ServiceElements();
		this.pInternalAction = new InternalActionElements();
		this.pExternalCallAction = new ExternalCallActionElements();
		this.pBranchAction = new BranchActionElements();
		this.pBranchTransition = new BranchTransitionElements();
		this.pLoopAction = new LoopActionElements();
		this.pEString = new EStringElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.example.mydsl.CBS".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//// region allocation
	//System returns allocation::System:
	//    'System'
	//    name=EString
	//    '{'
	//        ('childContexts=' '{' childContexts+=AssemblyContext ( "," childContexts+=AssemblyContext)* '}' )?
	//        ('assemblyConnectors=' '{' assemblyConnectors+=AssemblyConnector ( "," assemblyConnectors+=AssemblyConnector)* '}' )?
	//        ('requiredDelegationConnectors=' '{' requiredDelegationConnectors+=RequiredDelegationConnector ( "," requiredDelegationConnectors+=RequiredDelegationConnector)* '}' )?
	//        ('providedDelegationConnectors=' '{' providedDelegationConnectors+=ProvidedDelegationConnector ( "," providedDelegationConnectors+=ProvidedDelegationConnector)* '}' )?
	//        'allocation='     '{' allocation=Allocation     '}'
	//    '}';
	public SystemElements getSystemAccess() {
		return pSystem;
	}
	
	public ParserRule getSystemRule() {
		return getSystemAccess().getRule();
	}
	
	//Allocation returns allocation::Allocation:
	//    'env=' environment=[environment::Environment|EString]
	//    ('allocationContexts=' '{' allocationContexts+=AllocationContext ( "," allocationContexts+=AllocationContext)* '}' )?;
	public AllocationElements getAllocationAccess() {
		return pAllocation;
	}
	
	public ParserRule getAllocationRule() {
		return getAllocationAccess().getRule();
	}
	
	//AllocationContext returns allocation::AllocationContext:
	//    '{'
	//        'container' container=[environment::Container|EString]
	//        'allocates' allocates=[assembly::AssemblyContext|EString]
	//    '}';
	public AllocationContextElements getAllocationContextAccess() {
		return pAllocationContext;
	}
	
	public ParserRule getAllocationContextRule() {
		return getAllocationContextAccess().getRule();
	}
	
	//// region environment
	//Environment returns environment::Environment:
	//    {environment::Environment}
	//    'Environment'
	//    name=EString
	//    '{'
	//        ('containers=' '{' container+=Container ( "," container+=Container)* '}' )?
	//        ('linkers=' '{' linker+=Linker ( "," linker+=Linker)* '}' )?
	//    '}';
	public EnvironmentElements getEnvironmentAccess() {
		return pEnvironment;
	}
	
	public ParserRule getEnvironmentRule() {
		return getEnvironmentAccess().getRule();
	}
	
	//Container returns environment::Container:
	//    {environment::Container}
	//    name=EString;
	public ContainerElements getContainerAccess() {
		return pContainer;
	}
	
	public ParserRule getContainerRule() {
		return getContainerAccess().getRule();
	}
	
	//Linker returns environment::Linker:
	//    'link' '(' links+=[environment::Container|EString] ( "," links+=[environment::Container|EString])* ')' ;
	public LinkerElements getLinkerAccess() {
		return pLinker;
	}
	
	public ParserRule getLinkerRule() {
		return getLinkerAccess().getRule();
	}
	
	//// region assembly
	//AssemblyContext returns assembly::AssemblyContext:
	//    name=EString
	//    '{'
	//        'instance' instantiates=[repository::Component|EString]
	//        ('provide' '(' providedRoles+=ProvidedRole ( "," providedRoles+=ProvidedRole)* ')' )?
	//        ('require' '(' requiredRoles+=RequiredRole ( "," requiredRoles+=RequiredRole)* ')' )?
	//    '}';
	public AssemblyContextElements getAssemblyContextAccess() {
		return pAssemblyContext;
	}
	
	public ParserRule getAssemblyContextRule() {
		return getAssemblyContextAccess().getRule();
	}
	
	//AssemblyConnector returns assembly::AssemblyConnector:
	//    '('
	//        requiringRole=[assembly::RequiredRole|EString]
	//    ','
	//        providingRole=[assembly::ProvidedRole|EString]
	//    ')';
	public AssemblyConnectorElements getAssemblyConnectorAccess() {
		return pAssemblyConnector;
	}
	
	public ParserRule getAssemblyConnectorRule() {
		return getAssemblyConnectorAccess().getRule();
	}
	
	//RequiredDelegationConnector returns assembly::RequiredDelegationConnector:
	//    requiringRole=[assembly::RequiredRole|EString];
	public RequiredDelegationConnectorElements getRequiredDelegationConnectorAccess() {
		return pRequiredDelegationConnector;
	}
	
	public ParserRule getRequiredDelegationConnectorRule() {
		return getRequiredDelegationConnectorAccess().getRule();
	}
	
	//ProvidedDelegationConnector returns assembly::ProvidedDelegationConnector:
	//     providingRole=[assembly::ProvidedRole|EString];
	public ProvidedDelegationConnectorElements getProvidedDelegationConnectorAccess() {
		return pProvidedDelegationConnector;
	}
	
	public ParserRule getProvidedDelegationConnectorRule() {
		return getProvidedDelegationConnectorAccess().getRule();
	}
	
	//ProvidedRole returns assembly::ProvidedRole:
	//        interface=[repository::Interface|EString];
	public ProvidedRoleElements getProvidedRoleAccess() {
		return pProvidedRole;
	}
	
	public ParserRule getProvidedRoleRule() {
		return getProvidedRoleAccess().getRule();
	}
	
	//RequiredRole returns assembly::RequiredRole:
	//    interface=[repository::Interface|EString];
	public RequiredRoleElements getRequiredRoleAccess() {
		return pRequiredRole;
	}
	
	public ParserRule getRequiredRoleRule() {
		return getRequiredRoleAccess().getRule();
	}
	
	//// region repository
	//Component returns repository::Component:
	//    AtomicComponent;
	public ComponentElements getComponentAccess() {
		return pComponent;
	}
	
	public ParserRule getComponentRule() {
		return getComponentAccess().getRule();
	}
	
	//Interface returns repository::Interface:
	//    {repository::Interface}
	//    'interface'
	//    name=EString
	//    '{'
	//        (signatures+=Signature ( "," signatures+=Signature)*)?
	//    '}';
	public InterfaceElements getInterfaceAccess() {
		return pInterface;
	}
	
	public ParserRule getInterfaceRule() {
		return getInterfaceAccess().getRule();
	}
	
	//AtomicComponent returns repository::AtomicComponent:
	//    {repository::AtomicComponent}
	//    'AtomicComponent'
	//    name=EString
	//    '{'
	//        ('requires' '{' requires+=[repository::Interface|EString] ( "," requires+=[repository::Interface|EString])* '}' )?
	//        ('provides' '{' provides+=[repository::Interface|EString] ( "," provides+=[repository::Interface|EString])* '}' )?
	//        ('services' '{' services+=Service ( "," services+=Service)* '}' )?
	//    '}';
	public AtomicComponentElements getAtomicComponentAccess() {
		return pAtomicComponent;
	}
	
	public ParserRule getAtomicComponentRule() {
		return getAtomicComponentAccess().getRule();
	}
	
	//Signature returns repository::Signature:
	//    returnType=[types::Type|EString]
	//    name=EString
	//    ('(' parameters+=Parameter ( "," parameters+=Parameter)* ')' )?;
	public SignatureElements getSignatureAccess() {
		return pSignature;
	}
	
	public ParserRule getSignatureRule() {
		return getSignatureAccess().getRule();
	}
	
	//Parameter returns repository::Parameter:
	//    type=[types::ParameterType|EString]
	//    name=EString;
	public ParameterElements getParameterAccess() {
		return pParameter;
	}
	
	public ParserRule getParameterRule() {
		return getParameterAccess().getRule();
	}
	
	//// region types
	//Type returns types::Type:
	//    Void | SimpleType | ComplexType;
	public TypeElements getTypeAccess() {
		return pType;
	}
	
	public ParserRule getTypeRule() {
		return getTypeAccess().getRule();
	}
	
	//ParameterType returns types::ParameterType:
	//    SimpleType | ComplexType | CollectionType;
	public ParameterTypeElements getParameterTypeAccess() {
		return pParameterType;
	}
	
	public ParserRule getParameterTypeRule() {
		return getParameterTypeAccess().getRule();
	}
	
	//SimpleType returns types::SimpleType:
	//    'type' type=SimpleTypeEnum;
	public SimpleTypeElements getSimpleTypeAccess() {
		return pSimpleType;
	}
	
	public ParserRule getSimpleTypeRule() {
		return getSimpleTypeAccess().getRule();
	}
	
	//ComplexType returns types::ComplexType:
	//    {types::ComplexType}
	//    'type'
	//    '{'
	//        (members+=ComplexMember ( "," members+=ComplexMember)* )?
	//    '}';
	public ComplexTypeElements getComplexTypeAccess() {
		return pComplexType;
	}
	
	public ParserRule getComplexTypeRule() {
		return getComplexTypeAccess().getRule();
	}
	
	//enum SimpleTypeEnum returns types::SimpleTypeEnum:
	//    String = 'String' | Int = 'Int' | Boolean = 'Boolean' | Char = 'Char' | Date = 'Date' | Double = 'Double' | Float = 'Float' | Long = 'Long';
	public SimpleTypeEnumElements getSimpleTypeEnumAccess() {
		return eSimpleTypeEnum;
	}
	
	public EnumRule getSimpleTypeEnumRule() {
		return getSimpleTypeEnumAccess().getRule();
	}
	
	//ComplexMember returns types::ComplexMember:
	//    name=EString ':' type=[types::ParameterType|EString];
	public ComplexMemberElements getComplexMemberAccess() {
		return pComplexMember;
	}
	
	public ParserRule getComplexMemberRule() {
		return getComplexMemberAccess().getRule();
	}
	
	//Void returns types::Void:
	//    {types::Void}
	//    'Void';
	public VoidElements getVoidAccess() {
		return pVoid;
	}
	
	public ParserRule getVoidRule() {
		return getVoidAccess().getRule();
	}
	
	//CollectionType returns types::CollectionType:
	//    type=CollectionTypeEnum '<' innerType=[types::ParameterType|EString] '>';
	public CollectionTypeElements getCollectionTypeAccess() {
		return pCollectionType;
	}
	
	public ParserRule getCollectionTypeRule() {
		return getCollectionTypeAccess().getRule();
	}
	
	//enum CollectionTypeEnum returns types::CollectionTypeEnum:
	//    List = 'List' | Map = 'Map';
	public CollectionTypeEnumElements getCollectionTypeEnumAccess() {
		return eCollectionTypeEnum;
	}
	
	public EnumRule getCollectionTypeEnumRule() {
		return getCollectionTypeEnumAccess().getRule();
	}
	
	//// region behavioral description
	//AbstractAction returns behavioraldescription::AbstractAction:
	//    InternalAction | ExternalCallAction | BranchAction | LoopAction;
	public AbstractActionElements getAbstractActionAccess() {
		return pAbstractAction;
	}
	
	public ParserRule getAbstractActionRule() {
		return getAbstractActionAccess().getRule();
	}
	
	//Service returns behavioraldescription::Service:
	//    'Service' implements=[repository::Signature|EString]
	//    '{'
	//        actions+=AbstractAction ( ";" actions+=AbstractAction)*
	//    '}';
	public ServiceElements getServiceAccess() {
		return pService;
	}
	
	public ParserRule getServiceRule() {
		return getServiceAccess().getRule();
	}
	
	//InternalAction returns behavioraldescription::InternalAction:
	//    {behavioraldescription::InternalAction}
	//    'internalCall';
	public InternalActionElements getInternalActionAccess() {
		return pInternalAction;
	}
	
	public ParserRule getInternalActionRule() {
		return getInternalActionAccess().getRule();
	}
	
	//ExternalCallAction returns behavioraldescription::ExternalCallAction:
	//    'externalCall' requiredService=[repository::Signature|EString];
	public ExternalCallActionElements getExternalCallActionAccess() {
		return pExternalCallAction;
	}
	
	public ParserRule getExternalCallActionRule() {
		return getExternalCallActionAccess().getRule();
	}
	
	//BranchAction returns behavioraldescription::BranchAction:
	//    'branch'
	//    '{'
	//        branches+=BranchTransition ( "," branches+=BranchTransition)*
	//    '}';
	public BranchActionElements getBranchActionAccess() {
		return pBranchAction;
	}
	
	public ParserRule getBranchActionRule() {
		return getBranchActionAccess().getRule();
	}
	
	//BranchTransition returns behavioraldescription::BranchTransition:
	//    branchCondition=EString '?'
	//    '{'
	//        actions+=AbstractAction ( "," actions+=AbstractAction)*
	//    '}';
	public BranchTransitionElements getBranchTransitionAccess() {
		return pBranchTransition;
	}
	
	public ParserRule getBranchTransitionRule() {
		return getBranchTransitionAccess().getRule();
	}
	
	//LoopAction returns behavioraldescription::LoopAction:
	//    {behavioraldescription::LoopAction}
	//    'loop'
	//    '{'
	//        bodyActions+=AbstractAction ( "," bodyActions+=AbstractAction)*
	//    '}';
	public LoopActionElements getLoopActionAccess() {
		return pLoopAction;
	}
	
	public ParserRule getLoopActionRule() {
		return getLoopActionAccess().getRule();
	}
	
	//// region helper
	//EString returns ecore::EString:
	//    STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
