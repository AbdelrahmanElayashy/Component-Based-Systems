<?xml version="1.0" encoding="UTF-8"?>
<description:Group xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:description="http://www.eclipse.org/sirius/description/1.1.0" xmlns:description_1="http://www.eclipse.org/sirius/diagram/description/1.1.0" xmlns:properties="http://www.eclipse.org/sirius/properties/1.0.0" xmlns:style="http://www.eclipse.org/sirius/diagram/description/style/1.1.0" xmlns:tool="http://www.eclipse.org/sirius/description/tool/1.1.0" xmlns:tool_1="http://www.eclipse.org/sirius/diagram/description/tool/1.1.0" name="Component-Based-Systems-SiriusEditor" version="12.0.0.2017041100">
  <ownedViewpoints name="ComponentBasedSystem" label="CBS">
    <ownedRepresentations xsi:type="description_1:DiagramDescription" name="ComponentsAndInterfaces" domainClass="componentbasedsystem::ComponentBasedSystemContainer" enablePopupBars="true">
      <metamodel href="../../Component-Based-Systems/model/ComponentBasedSystems.ecore#/"/>
      <metamodel href="../../Component-Based-Systems/model/ComponentBasedSystems.ecore#//assembly"/>
      <metamodel href="../../Component-Based-Systems/model/ComponentBasedSystems.ecore#//environment"/>
      <metamodel href="../../Component-Based-Systems/model/ComponentBasedSystems.ecore#//allocation"/>
      <metamodel href="../../Component-Based-Systems/model/ComponentBasedSystems.ecore#//repository"/>
      <metamodel href="../../Component-Based-Systems/model/ComponentBasedSystems.ecore#//repository/behavioraldescription"/>
      <metamodel href="../../Component-Based-Systems/model/ComponentBasedSystems.ecore#//repository/types"/>
      <diagramInitialisation>
        <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:container">
          <subModelOperations xsi:type="tool:If" conditionExpression="aql: self.repository == null">
            <subModelOperations xsi:type="tool:CreateInstance" typeName="repository::Repository" referenceName="repository" variableName=""/>
          </subModelOperations>
          <subModelOperations xsi:type="tool:If" conditionExpression="aql: self.assembly == null">
            <subModelOperations xsi:type="tool:CreateInstance" typeName="assembly::Assembly" referenceName="assembly" variableName=""/>
          </subModelOperations>
        </firstModelOperations>
      </diagramInitialisation>
      <defaultLayer name="Default">
        <nodeMappings name="Component" labelDirectEdit="//@ownedViewpoints[name='ComponentBasedSystem']/@ownedRepresentations[name='ComponentsAndInterfaces']/@defaultLayer/@toolSections.0/@ownedTools[name='Edit%20Name']" domainClass="repository::Component">
          <style xsi:type="style:SquareDescription" labelSize="12" iconPath="/Component-Based-Systems-SiriusEditor/icons/Component.png" sizeComputationExpression="10" labelPosition="node" resizeKind="NSEW" width="20" height="10">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </style>
          <conditionnalStyles predicateExpression="[self.oclIsKindOf(repository::AtomicComponent)/]">
            <style xsi:type="style:SquareDescription" labelSize="12" iconPath="/Component-Based-Systems-SiriusEditor/icons/Component.png" sizeComputationExpression="10" labelPosition="node" resizeKind="NSEW" width="20" height="10">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="[self.oclIsKindOf(assembly::CompositeComponent)/]">
            <style xsi:type="style:SquareDescription" labelSize="12" iconPath="/Component-Based-Systems-SiriusEditor/icons/Component.png" sizeComputationExpression="10" labelPosition="node" resizeKind="NSEW" width="20" height="10">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_purple']"/>
            </style>
          </conditionnalStyles>
        </nodeMappings>
        <edgeMappings name="Provided Interface" deletionDescription="//@ownedViewpoints[name='ComponentBasedSystem']/@ownedRepresentations[name='ComponentsAndInterfaces']/@defaultLayer/@toolSections.0/@ownedTools[name='Delete%20Provided%20Interface']" sourceMapping="//@ownedViewpoints[name='ComponentBasedSystem']/@ownedRepresentations[name='ComponentsAndInterfaces']/@defaultLayer/@nodeMappings[name='Component']" targetMapping="//@ownedViewpoints[name='ComponentBasedSystem']/@ownedRepresentations[name='ComponentsAndInterfaces']/@defaultLayer/@containerMappings[name='Interface']" targetFinderExpression="feature:provides">
          <style sizeComputationExpression="2" centeredSourceMappings="//@ownedViewpoints[name='ComponentBasedSystem']/@ownedRepresentations[name='ComponentsAndInterfaces']/@defaultLayer/@nodeMappings[name='Component']" centeredTargetMappings="//@ownedViewpoints[name='ComponentBasedSystem']/@ownedRepresentations[name='ComponentsAndInterfaces']/@defaultLayer/@containerMappings[name='Interface']">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription labelSize="9" labelExpression="&lt;&lt;provides>>">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="Required Interface" deletionDescription="//@ownedViewpoints[name='ComponentBasedSystem']/@ownedRepresentations[name='ComponentsAndInterfaces']/@defaultLayer/@toolSections.0/@ownedTools[name='Delete%20Required%20Interface']" sourceMapping="//@ownedViewpoints[name='ComponentBasedSystem']/@ownedRepresentations[name='ComponentsAndInterfaces']/@defaultLayer/@nodeMappings[name='Component']" targetMapping="//@ownedViewpoints[name='ComponentBasedSystem']/@ownedRepresentations[name='ComponentsAndInterfaces']/@defaultLayer/@containerMappings[name='Interface']" targetFinderExpression="feature:requires">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription labelSize="9" labelExpression="&lt;&lt;requires>>">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <containerMappings name="Interface" labelDirectEdit="//@ownedViewpoints[name='ComponentBasedSystem']/@ownedRepresentations[name='ComponentsAndInterfaces']/@defaultLayer/@toolSections.0/@ownedTools[name='Edit%20Name']" domainClass="Interface" childrenPresentation="List">
          <subNodeMappings name="Signature" labelDirectEdit="//@ownedViewpoints[name='ComponentBasedSystem']/@ownedRepresentations[name='ComponentsAndInterfaces']/@defaultLayer/@toolSections.0/@ownedTools[name='Edit%20Name']" semanticCandidatesExpression="feature:signatures" doubleClickDescription="//@ownedViewpoints[name='ComponentBasedSystem']/@ownedRepresentations[name='ComponentsAndInterfaces']/@defaultLayer/@toolSections.0/@ownedTools[name='']" domainClass="Signature">
            <style xsi:type="style:SquareDescription" labelSize="10" labelExpression="aql:self.returnType.getDataTypeName() + ' ' + self.name + '(' + self.printParameters() + ')'" iconPath="/Component-Based-Systems-SiriusEditor/icons/Method.png" labelAlignment="LEFT" labelPosition="node" resizeKind="NSEW">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            </style>
          </subNodeMappings>
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="10" labelExpression="aql: '&lt;&lt;Interface>> '.concat(self.name)" iconPath="/Component-Based-Systems-SiriusEditor/icons/Interface.png">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
          </style>
        </containerMappings>
        <toolSections>
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="CreateAtomicComponent" label="AtomicComponent" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='ComponentBasedSystem']/@ownedRepresentations[name='ComponentsAndInterfaces']/@defaultLayer/@nodeMappings[name='Component']" iconPath="/Component-Based-Systems-SiriusEditor/icons/Component.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql: container.repository">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="AtomicComponent" referenceName="components">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'atomicComponent' + container.eAllContents()->filter(repository::AtomicComponent)->size()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="CreateCompositeComponent" label="CompositeComponent" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='ComponentBasedSystem']/@ownedRepresentations[name='ComponentsAndInterfaces']/@defaultLayer/@nodeMappings[name='Component']" iconPath="/Component-Based-Systems-SiriusEditor/icons/Component.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql: container.assembly">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="assembly::CompositeComponent" referenceName="compositeComponents">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'compositeComponent' + container.eAllContents()->filter(assembly::CompositeComponent)->size()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ContainerCreationDescription" name="Interface" containerMappings="//@ownedViewpoints[name='ComponentBasedSystem']/@ownedRepresentations[name='ComponentsAndInterfaces']/@defaultLayer/@containerMappings[name='Interface']" iconPath="/Component-Based-Systems-SiriusEditor/icons/Interface.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql: container.repository">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="repository::Interface" referenceName="interfaces">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'Interface' + container.eContents()->filter(repository::Interface)->size()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="Signature" nodeMappings="//@ownedViewpoints[name='ComponentBasedSystem']/@ownedRepresentations[name='ComponentsAndInterfaces']/@defaultLayer/@containerMappings[name='Interface']/@subNodeMappings[name='Signature']" iconPath="/Component-Based-Systems-SiriusEditor/icons/Method.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="repository::Signature" referenceName="signatures">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'method' + container.eAllContents()->filter(repository::Signature)->size()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:EdgeCreationDescription" name="Provided Interface" edgeMappings="//@ownedViewpoints[name='ComponentBasedSystem']/@ownedRepresentations[name='ComponentsAndInterfaces']/@defaultLayer/@edgeMappings[name='Provided%20Interface']">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:source">
                <subModelOperations xsi:type="tool:SetValue" featureName="provides" valueExpression="var:target"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:EdgeCreationDescription" name="Required Interface" edgeMappings="//@ownedViewpoints[name='ComponentBasedSystem']/@ownedRepresentations[name='ComponentsAndInterfaces']/@defaultLayer/@edgeMappings[name='Required%20Interface']">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:source">
                <subModelOperations xsi:type="tool:SetValue" featureName="requires" valueExpression="var:target"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:DirectEditLabel" name="Edit Name" inputLabelExpression="feature:name">
            <mask mask="{0}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="var:0"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:DeleteElementDescription" name="Delete Provided Interface">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:Let" variableName="target" valueExpression="[elementView.oclAsType(DEdge).targetNode.oclAsType(DSemanticDecorator).target/]">
                <subModelOperations xsi:type="tool:Let" variableName="source" valueExpression="[elementView.oclAsType(DEdge).sourceNode.oclAsType(DSemanticDecorator).target/]">
                  <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:source">
                    <subModelOperations xsi:type="tool:Unset" featureName="provides" elementExpression="aql:target"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:DeleteElementDescription" name="Delete Required Interface">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:Let" variableName="target" valueExpression="[elementView.oclAsType(DEdge).targetNode.oclAsType(DSemanticDecorator).target/]">
                <subModelOperations xsi:type="tool:Let" variableName="source" valueExpression="[elementView.oclAsType(DEdge).sourceNode.oclAsType(DSemanticDecorator).target/]">
                  <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:source">
                    <subModelOperations xsi:type="tool:Unset" featureName="requires" elementExpression="aql:target"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:DoubleClickDescription" mappings="//@ownedViewpoints[name='ComponentBasedSystem']/@ownedRepresentations[name='ComponentsAndInterfaces']/@defaultLayer/@containerMappings[name='Interface']/@subNodeMappings[name='Signature']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="aql: 'Edit Signature ' + self.name">
                  <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                    <initialOperation/>
                  </buttons>
                  <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                    <initialOperation/>
                  </buttons>
                  <page name="Edit Signature Page" domainClass="Signature" semanticCandidateExpression="var:self" groups="//@ownedViewpoints[name='ComponentBasedSystem']/@ownedRepresentations[name='ComponentsAndInterfaces']/@defaultLayer/@toolSections.0/@ownedTools[name='']/@initialOperation/@firstModelOperations/@subModelOperations.0/@groups.0"/>
                  <groups name="Edit Signature Group">
                    <controls xsi:type="properties:TextDescription" name="Edit Name" labelExpression="name" valueExpression="aql: self.name">
                      <initialOperation>
                        <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:self">
                          <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="var:newValue"/>
                        </firstModelOperations>
                      </initialOperation>
                    </controls>
                    <controls xsi:type="properties:SelectDescription" name="Edit Return Type" labelExpression="return type" valueExpression="aql: self.returnType" candidatesExpression="aql:self.eContainer().eContainer().types" candidateDisplayExpression="aql: candidate.name">
                      <initialOperation>
                        <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:self">
                          <subModelOperations xsi:type="tool:SetValue" featureName="returnType" valueExpression="var:newValue"/>
                        </firstModelOperations>
                      </initialOperation>
                    </controls>
                    <controls xsi:type="properties:ListDescription" name="parameter" labelExpression="parameters" valueExpression="aql: self.parameters" displayExpression="aql: value.name">
                      <onClickOperation>
                        <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:self"/>
                      </onClickOperation>
                      <actions labelExpression="Create Parameter">
                        <initialOperation>
                          <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:element">
                            <subModelOperations xsi:type="tool:CreateInstance" typeName="repository::Parameter" referenceName="parameters">
                              <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="New Dialog">
                                <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                                  <initialOperation/>
                                </buttons>
                                <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                                  <initialOperation/>
                                </buttons>
                                <page name="Default Page" labelExpression="Page" semanticCandidateExpression="var:self" groups="//@ownedViewpoints[name='ComponentBasedSystem']/@ownedRepresentations[name='ComponentsAndInterfaces']/@defaultLayer/@toolSections.0/@ownedTools[name='']/@initialOperation/@firstModelOperations/@subModelOperations.0/@groups.0/@controls.2/@actions.0/@initialOperation/@firstModelOperations/@subModelOperations.0/@subModelOperations.0/@groups.0"/>
                                <groups name="Default Group" labelExpression="Group" semanticCandidateExpression="var:self">
                                  <controls xsi:type="properties:TextDescription" name="Edit Name" labelExpression="name" valueExpression="aql: self.name">
                                    <initialOperation>
                                      <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:instance">
                                        <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="var:newValue"/>
                                      </firstModelOperations>
                                    </initialOperation>
                                  </controls>
                                  <controls xsi:type="properties:SelectDescription" name="Edit Return Type" labelExpression="type" valueExpression="aql: self.type" candidatesExpression="aql: self.eContainer().eContainer().eContainer().types" candidateDisplayExpression="aql: candidate.name">
                                    <initialOperation>
                                      <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:self">
                                        <subModelOperations xsi:type="tool:SetValue" featureName="type" valueExpression="var:newValue"/>
                                      </firstModelOperations>
                                    </initialOperation>
                                  </controls>
                                </groups>
                              </subModelOperations>
                            </subModelOperations>
                          </firstModelOperations>
                        </initialOperation>
                      </actions>
                      <actions labelExpression="Delete Parameter">
                        <initialOperation>
                          <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:self">
                            <subModelOperations xsi:type="tool:Unset" featureName="parameters" elementExpression="var:selection"/>
                          </firstModelOperations>
                        </initialOperation>
                      </actions>
                    </controls>
                  </groups>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </defaultLayer>
    </ownedRepresentations>
    <ownedJavaExtensions qualifiedClassName="componentBasedSystems.Services"/>
  </ownedViewpoints>
</description:Group>
